* Features Available

** Actions for following business flows :-

     - Basic Issue Life Cycle:
       + User creates an issue via sdk
       + User sends a message against the above issue
       + Agent/Admin logs into the admin dashboard
       + Agent/Admin sends message against the above issue
       + Agent/Admin resolves the issue from admin dashboard

     - Agent inserts tag to an Issue
       + User creates an issue via sdk
       + Agent/Admin logs into the admin dashboard
       + Agent/Admin creates a new tag from the admin dashboard
       + Agent/Admin opens the issue in the dashboard
       + Agent/Admin inserts tag to the issue

     - Agent udpates a cif of an issue
       + User creates an issue via sdk
       + Agent/Admin logs into admin dashboard
       + Agent/Admin creates new cif
       + Agent/Admin opens the issue in the dashboard
       + Agent/Admin adds value against the cif for an issue

** Runners which can execute
    - All the scenarios inside an edn file
    - Selected scenarios in an edn file

** Validate events generated by each action of all scenarios

** Detailed Result/Output which shows Action Response + Result of the event validation


* Next Action Items
+ [X] All remaining review commits.
+ [X] Refactor `kaaf.contracts.sequence-validators`
+ [X] Refactor ordering of action multimethod in `kaaf.dsl.core` (very small task)
+ [ ] Move all comments as tests.
+ [X] Add a verbose flag for execution
+ [X] Identify a new feature where there are going to be dashboard events changes
  - [X] A manual on how the developer of feature will leverage kaaf
+ [ ] How do we know whether a feature is providing coverage for dashboard-events
  + [ ] refer other-adi utility on permutations and combinations of actions
+ [ ] Explore GraalVM to build kaaf binaries for faster execution
+ [ ] Add timeouts in kaaf to allow generation of event




+ [-] Productionize / Integrate it with one of the product (consumer)
  + [ ] Need to upload the kaaf library to S3 maven
  + [X] Create a sample client app which will leverage kaaf - Done
    + Have created a plain clojure progect with a single namespace.
      It will only have .edn file, env.clj file and a method to call
      the runner with required params.

+ [ ] How to integrate to nightly runs - On Priority : 1st week may
  + How to create an environment (vagrant like) in the nightly run?
    Do we already have any tests where we create such an env?
    + As per discussion with somya on 24/4/2020, we already create sandbox
      environment via jenkins job for nightly execution of integration
      tests.
  + Once environment is up, how can we setup basic data in the env?
    e.g. Domain, app, user profile? I think we already do this in the
    integration tests we have?
    + As per discussion with somya on 24/4/2020, we have setup scripts inside
      moby/src/qa/fixtures/shuriken, which creates site, platform, faqs, profiles
    + One question I have is :- As this already resides in the moby repo. Whereas
      our framework is in separate repo, how can we leverage it? Can we refer moby
      as a library?
      + Had a call with Vineet and this needs to be done as it was done for Shuriken and bugs bunny
    + Also, I did not find a setup method to create a new domain. Does a domain
      already gets created with sandbox environment?
  + Each project should have their own build?
  + should it be there for each branch?


+ hs_meta.yml update with kaaf version
